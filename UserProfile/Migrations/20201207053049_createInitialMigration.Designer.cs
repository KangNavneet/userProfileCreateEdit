// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserProfile.Data;

namespace UserProfile.Migrations
{
    [DbContext(typeof(UserProfileContext))]
    [Migration("20201207053049_createInitialMigration")]
    partial class createInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("UserProfile.Models.BlogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("BlogDetails");
                });

            modelBuilder.Entity("UserProfile.Models.SocialDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("UserDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("friendsEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profileImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserDetailsId");

                    b.ToTable("SocialDetails");
                });

            modelBuilder.Entity("UserProfile.Models.UserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BlogModelId")
                        .HasColumnType("int");

                    b.Property<string>("alias")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("socialUrl")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("website")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("BlogModelId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("UserProfile.Models.BlogModel", b =>
                {
                    b.HasOne("UserProfile.Models.UserDetails", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("UserProfile.Models.SocialDetails", b =>
                {
                    b.HasOne("UserProfile.Models.UserDetails", null)
                        .WithMany("userToSocialFK")
                        .HasForeignKey("UserDetailsId");
                });

            modelBuilder.Entity("UserProfile.Models.UserDetails", b =>
                {
                    b.HasOne("UserProfile.Models.BlogModel", null)
                        .WithMany("Blogs")
                        .HasForeignKey("BlogModelId");
                });

            modelBuilder.Entity("UserProfile.Models.BlogModel", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("UserProfile.Models.UserDetails", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("userToSocialFK");
                });
#pragma warning restore 612, 618
        }
    }
}
